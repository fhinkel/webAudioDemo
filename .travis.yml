# You must sign into travis-ci.org and set the commit hook on your project for travis to
# run on your project. The secure: variable must be generated by running `travis encrypt`
# on a github oauth key that you can generate using curl.

language:
    node_js
node_js:
    - "stable"

branches:
    only:
        - master
env:
    global:
        # GH_OAUTH_TOKEN is the oauth token generated as described at
        # https://help.github.com/articles/creating-an-oauth-token-for-command-line-use
        #
        # curl -u 'username' -d '{"scopes":["repo"],"note":"push to gh-pages from travis"}' https://api.github.com/authorizations
        #
        # It must be encrypted using the travis gem
        # http://about.travis-ci.org/docs/user/build-configuration/#Secure-environment-variables
        #
        # travis encrypt GH_OAUTH_TOKEN=XXXXXXXXXXXXXXX
        #
        # User specific env variables
        - secure: "fZg5b8W53JgwEuO+duBUwxDC7Gh+c9Q93uDTfZ/yeQqw1pTFvc3iNrIphhYVh/pUPQfEYm9EdIROaIHnCrjELvw4qL048ZTqZlPz+WlwkabSgfrAIGgCUuK927CBk2/othotbQfMeHC98n/lWYn23PWuW08p9f/hy1vEaGufpyDZOUYkPaWDyRowuak227gVOXIA20lmkf2LbkqjMF6K72JMSqkZ2pp7Xg3hn2GPKFs06/MMim58AYancX9kdhsU6M+4HmhcZUDzgfGx4sSDNRxMKSxSmEpeLrqMacDL4xTiBJZXyeOc3+IsZ4dv7IKRzTBKylcKVHlHELnIoybNyARh4oAlOp4OkwrViAE8jZz7XO3C8cH/FDe2eQ3lzvjCmZ7TuyTnF3/aCf9/sKxISPw4Z2B4j+/e4OPUHJnPTYIjM8+6GniZNf75tb6sjEpHxad/AnrhMsvYHOqjK6QdoMssR3aDiFme9KD7amB07LAKUWSBB3NG87T22IDJlyEdis6Ljfip63lEaenNMziR9pTaEDCMsv//CjrgF6TRHxJUgSNvWjsc5TKRe3S5umMHpEN4kQOkhwBwc8qBHk4/GMt2jkuwZCbgwtT/Amfl2P4LhB0wXAJVsRbvCUn+M7bOfHimSR6w34xQVIcEPrCXtbJrPlpImqMmfLC/gS4WNJQ="
        - GH_OWNER: fhinkel
        - GH_PROJECT_NAME: webAudioDemo
        # This .travis.yml file instructs travis-ci.org to build your master branch using `yeoman build`
        # and deploy the output to your project's gh-pages branch.

script:
    # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
    - git submodule add -b gh-pages https://${GH_OAUTH_TOKEN}@github.com/${GH_OWNER}/${GH_PROJECT_NAME} site > /dev/null 2>&1
    - cd site
    - if git checkout gh-pages; then git checkout -b gh-pages; fi
    - git rm -r .
    - cp -R ../dist/* .
    - cp ../dist/.* .
    - git add -f .
    - git config user.email "franziska.hinkelmann@gmail.com"
    - git config user.name "Franziska Hinkelmann"
    - git commit -am "adding the yeoman build files to gh-pages [ci skip]"
    # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
    - git push https://${GH_OAUTH_TOKEN}@github.com/${GH_OWNER}/${GH_PROJECT_NAME} HEAD:gh-pages > /dev/null 2>&1
